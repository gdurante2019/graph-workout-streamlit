///////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Garmin International, Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2022 Garmin International, Inc.
///////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.84Release
// Tag = production/akw/21.84.00-0-g894a113c
///////////////////////////////////////////////////////////////////////////////////


#import <Foundation/Foundation.h>

#import "FITDate.h"
#import "FITMessage.h"
#import "FITTypes.h"

NS_ASSUME_NONNULL_BEGIN

@interface FITTimestampCorrelationMesg : FITMessage
- (id)init;
// Timestamp 
- (BOOL)isTimestampValid;
- (FITDate *)getTimestamp;
- (void)setTimestamp:(FITDate *)timestamp;
// FractionalTimestamp 
- (BOOL)isFractionalTimestampValid;
- (FITFloat32)getFractionalTimestamp;
- (void)setFractionalTimestamp:(FITFloat32)fractionalTimestamp;
// SystemTimestamp 
- (BOOL)isSystemTimestampValid;
- (FITDate *)getSystemTimestamp;
- (void)setSystemTimestamp:(FITDate *)systemTimestamp;
// FractionalSystemTimestamp 
- (BOOL)isFractionalSystemTimestampValid;
- (FITFloat32)getFractionalSystemTimestamp;
- (void)setFractionalSystemTimestamp:(FITFloat32)fractionalSystemTimestamp;
// LocalTimestamp 
- (BOOL)isLocalTimestampValid;
- (FITLocalDateTime)getLocalTimestamp;
- (void)setLocalTimestamp:(FITLocalDateTime)localTimestamp;
// TimestampMs 
- (BOOL)isTimestampMsValid;
- (FITUInt16)getTimestampMs;
- (void)setTimestampMs:(FITUInt16)timestampMs;
// SystemTimestampMs 
- (BOOL)isSystemTimestampMsValid;
- (FITUInt16)getSystemTimestampMs;
- (void)setSystemTimestampMs:(FITUInt16)systemTimestampMs;

@end

NS_ASSUME_NONNULL_END
